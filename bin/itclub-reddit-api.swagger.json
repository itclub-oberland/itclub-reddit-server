{
  "swagger": "2.0",
  "paths": {
    "/": {
      "get": {
        "summary": "/",
        "consumes": [
          "application/json"
        ],
        "parameters": []
      },
      "delete": {
        "summary": "/",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Storage cleared!"
                }
              }
            }
          }
        }
      }
    },
    "/activeUser": {
      "put": {
        "summary": "/activeUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "1 docs updated."
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "/activeUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Zmotey"
                },
                "password": {
                  "type": "string",
                  "example": "******"
                },
                "__type": {
                  "type": "string",
                  "example": "User"
                },
                "_id": {
                  "type": "string",
                  "example": "u6m3w9gphcpYTOXp"
                }
              }
            }
          },
          "304": {},
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No active User found!"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "/activeUser",
        "consumes": [
          "application/json"
        ],
        "parameters": []
      }
    },
    "/activeTopic": {
      "put": {
        "summary": "/activeTopic",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "1 docs updated."
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "/activeTopic",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "ALL"
                },
                "__type": {
                  "type": "string",
                  "example": "Topic"
                },
                "_id": {
                  "type": "string",
                  "example": "SRlE9cV7lHXs0ylK"
                }
              }
            }
          },
          "304": {}
        }
      },
      "delete": {
        "summary": "/activeTopic",
        "consumes": [
          "application/json"
        ],
        "parameters": []
      }
    },
    "/users": {
      "get": {
        "summary": "/users",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "__type": {
                    "type": "string"
                  },
                  "_id": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {}
        }
      },
      "post": {
        "summary": "/users",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "Zmotey"
                },
                "password": {
                  "type": "string",
                  "example": "******"
                },
                "__type": {
                  "type": "string",
                  "example": "User"
                },
                "_id": {
                  "type": "string",
                  "example": "3jIkQZgRUYXXvJ9X"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "/users",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Users storage cleared!"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "summary": "/users/{username}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "/users/{username}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "/users/{username}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/topics": {
      "get": {
        "summary": "/topics",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "__type": {
                    "type": "string"
                  },
                  "_id": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "__type",
                  "_id"
                ]
              }
            }
          },
          "304": {}
        }
      },
      "post": {
        "summary": "/topics",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "ALL"
                },
                "__type": {
                  "type": "string",
                  "example": "Topic"
                },
                "_id": {
                  "type": "string",
                  "example": "yOreQTBG0Znwzq3s"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "/topics",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Topics storage cleared!"
                }
              }
            }
          }
        }
      }
    },
    "/topics/{topicname}": {
      "get": {
        "summary": "/topics/{topicname}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topicname",
            "in": "path",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "/topics/{topicname}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topicname",
            "in": "path",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "/topics/{topicname}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "topicname",
            "in": "path",
            "required": true
          }
        ]
      }
    },
    "/posts": {
      "get": {
        "summary": "/posts",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "number"
                  },
                  "topic": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "__type": {
                        "type": "string"
                      }
                    }
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "__type": {
                        "type": "string"
                      }
                    }
                  },
                  "title": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "comments": {
                    "type": "array",
                    "items": {}
                  },
                  "upVotes": {
                    "type": "array",
                    "items": {}
                  },
                  "downVotes": {
                    "type": "array",
                    "items": {}
                  },
                  "__type": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "304": {}
        }
      },
      "post": {
        "summary": "/posts",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "number",
                  "example": 1543532982357
                },
                "topic": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ALL"
                    },
                    "__type": {
                      "type": "string",
                      "example": "Topic"
                    }
                  }
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "Hacim"
                    },
                    "password": {
                      "type": "string",
                      "example": "******"
                    },
                    "__type": {
                      "type": "string",
                      "example": "User"
                    }
                  }
                },
                "title": {
                  "type": "string",
                  "example": "Header 0"
                },
                "image": {
                  "type": "string",
                  "example": "https://picsum.photos/800/400?image=0"
                },
                "message": {
                  "type": "string",
                  "example": "Deserunt aliquip voluptate, corned beef chicken tongue proident laborum ullamco pastrami tri-tip.  Bresaola ham hock consectetur cillum jowl leberkas biltong spare ribs fugiat sunt dolore.  Chuck capicola strip steak, corned beef elit pork chop aute in.  Pork loin aute culpa est dolore anim hamburger pork chop.  Esse commodo doner consequat, kevin consectetur bacon flank id et minim.  Occaecat leberkas non, landjaeger boudin ham hock eiusmod culpa short loin reprehenderit duis."
                },
                "comments": {
                  "type": "array",
                  "items": {},
                  "example": []
                },
                "upVotes": {
                  "type": "array",
                  "items": {},
                  "example": []
                },
                "downVotes": {
                  "type": "array",
                  "items": {},
                  "example": []
                },
                "__type": {
                  "type": "string",
                  "example": "Post"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "/posts",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "All Posts updated successfully."
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "/posts",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Posts storage cleared!"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "summary": "/posts/{postId}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "/posts/{postId}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true
          }
        ]
      },
      "delete": {
        "summary": "/posts/{postId}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true
          }
        ]
      }
    }
  },
  "info": {
    "description": "[Specification JSON](/api-spec)"
  }
}